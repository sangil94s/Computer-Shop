// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Vocs {
  id      Int     @id @default(autoincrement())
  category String @db.VarChar(10) // 문의 카테고리
  title String @db.VarChar(30) // 문의 제목
  description String @db.VarChar(255) // 문의 내용
  createDate   DateTime    @default(now())
} // 익명 문의 목적 - 별도 타 모델과 관계 설정 안함

model Faq {
  id      Int     @id @default(autoincrement())
  category String @db.VarChar(10) 
  title String @db.VarChar(30) 
  description String @db.Text 
  createDate   DateTime    @default(now())
} // FAQ

model Product {
  id      Int     @id @default(autoincrement())
  category String @db.VarChar(10) // 상품 카테고리
  title String @db.VarChar(25) // 상품 제목
  price Int // 상품 가격 
  purchase Boolean // 상품 구매 가능 유/무 -> 품절이면 False
  smallDescription String @db.VarChar(15) // 상품에 대한 간단 소개
  productImage String @db.Text // 상품 이미지 
  createDate   DateTime    @default(now())
  productDetail ProductDetail?
  cart Cart?
} // 상품 관련 Model

model ProductDetail {
  id      Int     @id @default(autoincrement())
  productId Int @unique 
  productDetailImage String @db.Text
  createDate   DateTime    @default(now())
  product Product @relation(fields: [productId],references: [id]) 
}

// 장바구니 Model
model Cart {
  id      Int     @id @default(autoincrement())
  productId Int @unique 
  title String @db.VarChar(25) // 장바구니에 들어간 상품 명
  totalPrice String @db.VarChar(10) // 사용자가 최종 선택한 가격
  totalCount String @db.VarChar(10) // 사용자가 상품 몇개를 장바구니에 넣었는지
  usernick String @db.VarChar(10) // 장바구니에 상품을 넣은 사용자의 닉네임
  createDate   DateTime    @default(now())
  product Product @relation(fields: [productId],references: [id]) 
} // 장바구니 